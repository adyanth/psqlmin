name: ci

on:
  push:
    branches:
      - "main"
  create:
    tags:
      - "v*"
  pull_request:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  docker:
    strategy:
      matrix:
        postgres:
          - latest
          - 17
          - 16
          - 15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            adyanth/psqlmin
            ghcr.io/adyanth/psqlmin
          flavor:
            latest=false
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha

            # latest tag on tagged releases or main branch (may or may not be multi-arch)
            type=raw,value=latest,enable=${{ matrix.postgres == 'latest' && (github.event.ref_type == 'tag' || format('refs/heads/{0}', github.event.repository.default_branch) == github.ref || github.event_name == 'workflow_dispatch') }}

            # Postgres version-latest tags on tagged releases or main branch (may or may not be multi-arch)
            type=raw,value=${{matrix.postgres}}-latest,enable=${{ matrix.postgres != 'latest' && (github.event.ref_type == 'tag' || format('refs/heads/{0}', github.event.repository.default_branch) == github.ref || github.event_name == 'workflow_dispatch') }}
            type=raw,value=v${{matrix.postgres}}-latest,enable=${{ matrix.postgres != 'latest' && (github.event.ref_type == 'tag' || format('refs/heads/{0}', github.event.repository.default_branch) == github.ref || github.event_name == 'workflow_dispatch') }}

            # Postgres version tags only on tagged releases (multi-arch)
            type=raw,value=${{matrix.postgres}},enable=${{ matrix.postgres != 'latest' && github.event.ref_type == 'tag' }}
            type=raw,value=v${{matrix.postgres}},enable=${{ matrix.postgres != 'latest' && github.event.ref_type == 'tag' }}

            # Tagged version prefixed with postgres version (multi-arch)
            type=semver,prefix=${{matrix.postgres}}-,pattern={{version}}
            type=semver,prefix=${{matrix.postgres}}-,pattern={{major}}.{{minor}}
            type=semver,prefix=${{matrix.postgres}}-,pattern={{major}}
            type=semver,prefix=${{matrix.postgres}}-,pattern=v{{version}}
            type=semver,prefix=${{matrix.postgres}}-,pattern=v{{major}}.{{minor}}
            type=semver,prefix=${{matrix.postgres}}-,pattern=v{{major}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: |
            PG_VERSION=${{matrix.postgres}}
          platforms: ${{ github.event.ref_type == 'tag' && 'linux/amd64,linux/arm64' || 'linux/amd64' }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Docker Hub Description
        if: github.event.ref_type == 'tag' || github.event_name == 'workflow_dispatch'
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: adyanth/psqlmin
          readme-filepath: ./README.md
          short-description: "Postgres with Webmin"
